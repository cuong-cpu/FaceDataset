# -*- coding: utf-8 -*-
"""Cv2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DJ00dx_WXbstwgCeJ1OYVfCG1Lk3wv6p
"""

import cv2
import tensorflow as tf
import matplotlib.pyplot as plt 
import numpy as np

from tensorflow.keras.preprocessing.image import ImageDataGenerator

TRAIN_DIR = "/content/FaceDataset/Dataset/Data"
VAL_DIR = "/content/FaceDataset/Dataset/Valdata"

IMG_SIZE = (224, 224)
INP_SHAPE = (*IMG_SIZE, 3)
BATCH_SIZE = 64

def gen_new_data(data_folder, augmented=True):
  if augmented:
    data_gen = ImageDataGenerator(rescale=1./255, rotation_range=40,
                                  width_shift_range=0.2, height_shift_range=0.2,
                                  horizontal_flip=True)
  else:
    data_gen = ImageDataGenerator(rescale=1./255)

  data = data_gen.flow_from_directory(
      data_folder,
      target_size=IMG_SIZE,
      batch_size=BATCH_SIZE,
      class_mode="binary",
  )
  return data

ds_train = gen_new_data(TRAIN_DIR,augmented=True)
ds_val = gen_new_data(VAL_DIR,augmented=False)

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.layers.experimental.preprocessing import Resizing
import tensorflow_hub as hub

resnet_url = "https://tfhub.dev/google/imagenet/resnet_v2_50/feature_vector/4" 

resnet = Sequential()
resnet.add(Resizing(224, 224, input_shape=INP_SHAPE))
resnet.add(hub.KerasLayer(resnet_url, trainable=False))
resnet.add(Dense(3, activation="softmax"))
resnet.summary()

INP_SHAPE

resnet.compile(optimizer="rmsprop", loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True), metrics=["acc"])

resnet_history = resnet.fit(ds_train, epochs=15, validation_data=ds_val)

resnet.save("Face.h5")

